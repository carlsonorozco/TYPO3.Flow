====================
2.2.3
====================

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Base Distribution
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

[TASK] Update PhpUnit to 4.3 and vfsStream to 1.4
-----------------------------------------------------------------------------------------

* Commit: `c6129e9 <https://git.typo3.org/Flow/Distributions/Base.git/commit/c6129e96124dc273019db1f1c3370eee87e40d34>`_

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
TYPO3.Eel
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

[BUGFIX] children() operation with an empty context should never fail
-----------------------------------------------------------------------------------------

This change makes sure that the children operation always returns
an empty result if an empty context was given. This is needed because
the TYPO3CR children operation might be chained and the later operation
will be resolved to the object version.

Fixes: NEOS-523

* Commit: `6cb35f6 <https://git.typo3.org/Packages/TYPO3.Eel.git/commit/6cb35f6dcc7375df347cc85a167aad4ad205e9a9>`_

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
TYPO3.Flow
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

[TASK] Update references in documentation
-----------------------------------------------------------------------------------------

See https://ci.neos.typo3.org/job/typo3-flow-release/40/

* Commit: `e9b778e <https://git.typo3.org/Packages/TYPO3.Flow.git/commit/e9b778ec351c0b100ea04c9b20dee0bd680a6e77>`_

[BUGFIX] Flush compiled configuration on cache:flush
-----------------------------------------------------------------------------------------

The ConfigurationManager writes compiled configuration to disk (if this
is enabled, by default this is the case in Production context). But this
compiled configuration is not removed when flushing caches, so that
changes never become active.

This change adjusts the CacheManager to be aware of this compiled
configuration and remove it during flushCaches().

Fixes: FLOW-229

* Commit: `3f30915 <https://git.typo3.org/Packages/TYPO3.Flow.git/commit/3f309158b3ad4b72d38e4b9dac73243ac73b6aae>`_

[BUGFIX] Fix resolving of imported interface namespaces
-----------------------------------------------------------------------------------------

Dependency injection and property mapping does not work for
interfaces of the current namespace if the code does not refer to
the fully qualified name.

Fixes: FLOW-34

* Commit: `84a33bd <https://git.typo3.org/Packages/TYPO3.Flow.git/commit/84a33bd376be61f333fb4aa2fd85c68e0532b51f>`_

[BUGFIX] Fix hostname option name for Redis backend
-----------------------------------------------------------------------------------------

Redis backend option for specifying a hostname is not `host`
but `hostname`.

* Commit: `d06ad06 <https://git.typo3.org/Packages/TYPO3.Flow.git/commit/d06ad06a4ec4f891cd88e070ab892787cd8b0168>`_

[BUGFIX] Pointed the issue tracker URL to the new JIRA instance
-----------------------------------------------------------------------------------------

* Commit: `82510ee <https://git.typo3.org/Packages/TYPO3.Flow.git/commit/82510eeb732db8b55b76d1c93747083bc6042f5e>`_

[BUGFIX] Schema validation: Accept interfaces for format "class-name"
-----------------------------------------------------------------------------------------

This change adjusts the ``SchemaValidator`` to accept strings referring
interfaces even if format "class-name" is required.

Background:

Currently if a string is expected to have the format "class-name", like::

 { type: string, format: class-name }

in a schema validation, only actual class names are accepted. To match
interfaces the "interface-name" format can be used.

In Flow we often use interface names in Objects.yaml in order to keep
things decoupled and flexible.
Because it's not possible to specify multiple supported formats, this
relaxes this restriction.

* Commit: `b39618a <https://git.typo3.org/Packages/TYPO3.Flow.git/commit/b39618a29a016d0529107157cc4ac027d5df1bec>`_

[TASK] Add a missing changelog (for 2.1.2)
-----------------------------------------------------------------------------------------

* Commit: `621a0b4 <https://git.typo3.org/Packages/TYPO3.Flow.git/commit/621a0b46c77ee6f4fd24641ea4254660c810d66d>`_

[BUGFIX] Fix error and standard view templates
-----------------------------------------------------------------------------------------

Fixes several minor issues in regards of rendering of the default
``Error`` and `StandardView`` templates:

* Inline "StandardView_FloatingWindow.png" background image (it wasn't loaded
  otherwise when not in web root because of missing base tag)
* Remove references to "StandardView_Package.png" that doesn't exist
* Commit: `8a06ded <https://git.typo3.org/Packages/TYPO3.Flow.git/commit/8a06deda786a4916519bbfe2ad2f26954961cdf7>`_

[TASK] Fix unit tests failing on PHP 5.6
-----------------------------------------------------------------------------------------

Some unit tests failed under PHP 5.6 because an argument to be passed by
reference was by value.
The affected tests now use ``_callRef`` in the ``AccessibleMock``.

This should solve those issues on HHVM as well.

Related: FLOW-194

* Commit: `e1a2d20 <https://git.typo3.org/Packages/TYPO3.Flow.git/commit/e1a2d2033ff73b6ae96b991f3492ef5cfc3f0d38>`_

[BUGFIX] Properly support doctrine's indexBy attribute
-----------------------------------------------------------------------------------------

Doctrine allows an indexBy attribute at OneToMany and ManyToMany
relations. The current FlowAnnotationDriver removes this attribute.
This patch passes it forward again.

Functional tests are included.

* Related: `#44740 <http://forge.typo3.org/issues/44740>`_
* Commit: `6d90717 <https://git.typo3.org/Packages/TYPO3.Flow.git/commit/6d90717ba6b4ef6c2d148021d3c607f57d5bc1b3>`_

[BUGFIX] Fix typo in PHPDoc for method getParameters
-----------------------------------------------------------------------------------------

This commit fixes a typo in the PHPDoc for the method
getParameters in file TYPO3\\Flow\\Reflection\\MethodReflection

* Commit: `8c33bad <https://git.typo3.org/Packages/TYPO3.Flow.git/commit/8c33bad3167681eea7bd03e8f8fef9b3c3107689>`_

[BUGFIX] Fix typo in PHPDoc for method createSchema
-----------------------------------------------------------------------------------------

This commit fixes a typo in the PHPDoc for the method
createSchema in file TYPO3\\Flow\\Persistence\\Doctrine\\Service

* Commit: `0bba7fd <https://git.typo3.org/Packages/TYPO3.Flow.git/commit/0bba7fd4408d364884c0591eb02539a272f488d9>`_

[BUGFIX] Package keys with different case should not be allowed
-----------------------------------------------------------------------------------------

Composer packages could change their Flow package key case, the package
manager needs to prevent registering the same package twice.

Fixes: FLOW-156

* Commit: `04b8ac8 <https://git.typo3.org/Packages/TYPO3.Flow.git/commit/04b8ac8deb2a1f03f65f9345cf976b2992e13790>`_

[TASK] Make i18n locale fallback rule handling a bit more robust
-----------------------------------------------------------------------------------------

If the locale fallback rule for the i18n framework is given without order an
exception is thrown. A missing strict flag on the fallback rule is set to the
default (FALSE) as implied by the documentation.

* Commit: `c580bb9 <https://git.typo3.org/Packages/TYPO3.Flow.git/commit/c580bb93ac2b28ff4e834ef560e437bb44d687c6>`_

[TASK] Remove inaccessible code from ArrayConverter
-----------------------------------------------------------------------------------------

Remove code that is currently inaccessible, because the constant
STRING_FORMAT_SERIALIZED is not defined in the class.

Unserializing from untrusted sources should not be done anyway
so we remove this possibility completely instead of adding the constant.

A use case which would require an unserialize for array conversion is complex
enough to be handled in a dedicated type converter class which exactly fits the use case
instead of providing a potentially insecure shortcut for that (unserialize) in the framework.

* Commit: `b0b4e6c <https://git.typo3.org/Packages/TYPO3.Flow.git/commit/b0b4e6ca4ec6f2d184a23f2e378d05247f807379>`_

[BUGFIX] AOP works with __clone call on parent objects
-----------------------------------------------------------------------------------------

If, for example, you extend an entity which implements __clone
the AOP Framework breaks with an warning in development mode,
that it cannot access Flow_Aop_Proxy_targetMethodsAndGroupedAdvices.

Solution is to check  if the private
Flow_Aop_Proxy_targetMethodsAndGroupedAdvices property is
accessible and otherwise skipping the Advice call.

* Related: `#37571 <http://forge.typo3.org/issues/37571>`_
* Commit: `7a9930b <https://git.typo3.org/Packages/TYPO3.Flow.git/commit/7a9930bf52406b863f81c6c93e20d87bf6730c10>`_

[BUGFIX] Log exceptions recursively in ``SystemLogger::logException()``
-----------------------------------------------------------------------------------------

With this change "post mortem" information about the complete exception
chain is logged, and not only for the outer exception.

This also adds some cosmetic and non-functional cleanups in order to
increase readability and IDE support:

* Import FQN where applicable
* Remove unused import statements

Fixes: FLOW-159
(cherry picked from commit 38602eb9d09ee6ad87a74352eadfaa17312d547c)

* Commit: `d211a40 <https://git.typo3.org/Packages/TYPO3.Flow.git/commit/d211a407efabeda63ec4558c75dafb6cb431db6d>`_

[TASK] Tweak Quickstart tutorial
-----------------------------------------------------------------------------------------

Adjusts the Quickstart to be in sync with recent Flow changes.

Related: FLOW-139

* Commit: `e15d72e <https://git.typo3.org/Packages/TYPO3.Flow.git/commit/e15d72ed03471301c7e3eda62402da91fcda8cd2>`_

[TASK] Explain "inconsistent naming" of classes and interfaces
-----------------------------------------------------------------------------------------

This adds the wonderful explanation the reasons for our naming of
classes and interfaces that Jacob Floyd sent to the mailing list to the
CGL appendix.

* Commit: `fe3122c <https://git.typo3.org/Packages/TYPO3.Flow.git/commit/fe3122cc51e9f60e6ce41569d1e0a7c12cdb41f7>`_

[BUGFIX] Throw exception when trying to reflect a non-existing class
-----------------------------------------------------------------------------------------

Previously the ``ReflectionService`` ignored classes that couldn't be
loaded. It just logged an error and marked the respective class
"unconfigurable".
This leads to weird side effects that are hard to track down.

With this change an exception is thrown during compile time whenever
a class is being reflected that couldn't be loaded.

If a class or file should be skipped during reflection, the
``excludeClasses`` can be used::

  TYPO3:
    Flow:
      object:
        excludeClasses:
          'Some.PackageKey': ['Some\\\\Class\\\\Name']

Fixes: FLOW-128

* Commit: `9fbc677 <https://git.typo3.org/Packages/TYPO3.Flow.git/commit/9fbc677b62f64d238acd99c9cbb6eb72a0d231af>`_

[BUGFIX] PHP Notice when multiple namespace roots are set
-----------------------------------------------------------------------------------------

The ``Package`` class triggers a PHP Notice when a composer manifest
contains several search paths for the same prefix (see [1])::

    {
      "autoload": {
        "psr-0": {
          "Foo\\\\": ["src/", "tests/"]
        }
      }
    }

This commit changes the behaviour to using the first path as class
path when multiple paths are defined.

[1] https://getcomposer.org/doc/04-schema.md#psr-0

Resolves: FLOW-94

* Commit: `009ec98 <https://git.typo3.org/Packages/TYPO3.Flow.git/commit/009ec9870102f4e85c74f8318e95991b40fcd4e5>`_

[BUGFIX] Prevent iteration over empty collection
-----------------------------------------------------------------------------------------

This shouldn't make a difference but with the current way
properties are serialized in the TYPO3CR it can happen that
you have ArrayCollections which do contain a NULL value instead
of an array. This will break on the next serialization and this
prevents it.

* Commit: `5eb0016 <https://git.typo3.org/Packages/TYPO3.Flow.git/commit/5eb001693e9b8b979030459819445b8b0a232757>`_

[TASK] Add "suggest" and "conflict" dependencies to newly created composer manifests
-----------------------------------------------------------------------------------------

Newly created composer manifests only contained the "require" dependencies
of the package meta data. With this change also suggested and conflicting
dependencies are added.

Related: NEOS-785

* Commit: `c89adb6 <https://git.typo3.org/Packages/TYPO3.Flow.git/commit/c89adb6c8124dd81ed550da0e2c8b77ad0d8546a>`_

[TASK] Fix wrong path in documentation
-----------------------------------------------------------------------------------------

Resolves: FLOW-91

* Commit: `58159ca <https://git.typo3.org/Packages/TYPO3.Flow.git/commit/58159cad28d45cb7f2ae79d96182af88f5a932c6>`_

[BUGFIX] Memcached backend not cleared across Cli/Web requests
-----------------------------------------------------------------------------------------

This is because the backend is bound to the executing script + SAPI mode
and not the installation path + Flow context. This makes it
impossible to clear entries created in the Web with the
Cli cache flush commands, and vice versa.

Additionally the Flow context is not taking into account so
the Development/Production share the same cache, which can
lead to undesired behavior.

Fixes: FLOW-116

* Commit: `5699283 <https://git.typo3.org/Packages/TYPO3.Flow.git/commit/56992832714fcb19c914bd7fe465ee999633116b>`_

[BUGFIX] Adjust code migration identifier pattern to contain the full timestamp
-----------------------------------------------------------------------------------------

Previously code migrations are expected to have a class name with the
pattern ``Version<YYYYMMDDhhmm>`` and the unique identifier was
determined extracting the last 12 characters of the class name (which
are expected to be the timestamp).

With this change everything after the "Version" string is considered for
the identifier, allowing the timestamp to contain seconds as well.

This also adjusts existing code migrations to use the full timestamp in
order to establish the new guideline (note: those migrations still
return the old identifier so that they won't be applied again with a
new identifier).

Fixes: FLOW-110

* Commit: `f69d716 <https://git.typo3.org/Packages/TYPO3.Flow.git/commit/f69d716349fd7efd906dd1bcbb7098fb5b5646b2>`_

[BUGFIX] Adjust regular expression to strip only first php tag
-----------------------------------------------------------------------------------------

This is a follow up for I388f1a7c04139d5482203887931684f597d71e54
which changed the regular expression in a way that wrongly
removed all opening php tags in the given php file.

Fixes: FLOW-90

* Commit: `3ec141a <https://git.typo3.org/Packages/TYPO3.Flow.git/commit/3ec141afe3e379aafdd3583fdb22bc0dfa723402>`_

[BUGFIX] Move file migration operation created empty folders
-----------------------------------------------------------------------------------------

When the "oldPath" didn't exist the operation still created the empty "newpath".

Related: NEOS-390

* Commit: `fab0da8 <https://git.typo3.org/Packages/TYPO3.Flow.git/commit/fab0da8eeba1c9b8f821615b91c05c0c0e942c9e>`_

[BUGFIX] Requesting /index.phpa/ breaks Uri host parameter
-----------------------------------------------------------------------------------------

If the request URI contains ``index.php`` and something afterwards
before a slash, that something is included in the host being
set on the request URI that's constructed.

Problem lies in the handling of URIs containing index.php,
where that part is automatically stripped off. However it
strips it off in a way that can cause this issue, when the
``parse_url()`` is called on a broken URI.

Fixes: FLOW-92

* Commit: `c63cd58 <https://git.typo3.org/Packages/TYPO3.Flow.git/commit/c63cd58a3dbca2708f5d5d4ab3d09007b8980aed>`_

[BUGFIX] There is a "off-by-one" error in proxy classes
-----------------------------------------------------------------------------------------

Since merging I42867963468c23a3dd11512c31ab1bff0ba3db1c the generated
proxy classes contain one line too much which results in error
messages showing the wrong line number when compared to the original
code. With this change the proxy class again resembles exactly
the original code.

* Commit: `062e9eb <https://git.typo3.org/Packages/TYPO3.Flow.git/commit/062e9eb4d6c1f6a78549623d7f887a7904913e4a>`_

[BUGFIX] Fix __toString() in Uri for edge case
-----------------------------------------------------------------------------------------

When constructing an Uri instance from a string like '/foo/bar' and
settings scheme and host afterwards, __toString would return
``http://host:/foo/bar`` (note the lone colon).

* Commit: `b65501f <https://git.typo3.org/Packages/TYPO3.Flow.git/commit/b65501fe83005eb7fc349cfb293c612f651b9a1a>`_

[BUGFIX] Merge request arguments instead of overwrite
-----------------------------------------------------------------------------------------

A sub-request losing its arguments if a route is defined f.e. like this:
-
  name: 'Basket Steps'
  uriPattern: '{node}/{--pipeu_factura_nodetypes-basket.@action}.{@format}'
  defaults:
    '@package': 'TYPO3.Neos'
    '@controller': 'Frontend\\Node'
    '@format': 'html'
    '@action': 'show'
    '--pipeu_factura_nodetypes-basket':
      '@package': 'PIPEU.Factura.NodeTypes'
      '@controller': 'Basket'
  routeParts:
    node:
      handler: TYPO3\\Neos\\Routing\\FrontendNodeRoutePartHandler
  appendExceedingArguments: true

In this case '--pipeu_factura_nodetypes-basket' will override
any pluginArgument because of a missing check for existing
index in pluginArguments. Its getting replaced instead of merged.

This wrong behavior is fixed with this patch by merging instead of
overwriting.

Same for internal arguments.

Was fixed in master by the related feature.

Related: I1d192231810757f38aecfc3f7dc520b118ee3feb

* Resolves: `#59404 <http://forge.typo3.org/issues/59404>`_
* Commit: `7e643f7 <https://git.typo3.org/Packages/TYPO3.Flow.git/commit/7e643f7b00ed624b8385f5f02f2862eaba43d40c>`_

[BUGFIX] Support split configuration source in code migrations
-----------------------------------------------------------------------------------------

Code migrations now also apply to split configuration files.

Fixes: FLOW-68

* Commit: `2b10823 <https://git.typo3.org/Packages/TYPO3.Flow.git/commit/2b108237ba30481c0a49edfa082c13d63f371030>`_

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
TYPO3.Fluid
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

[TASK] Streamline regular expression for Resource URLs
-----------------------------------------------------------------------------------------

The regular expression to split templates finding resource URLs
is prone to breaking in case the match grows too long because it
has no boundaries. This change stops the match earlier, this also
massively increases the matching speed.

* Commit: `31dd569 <https://git.typo3.org/Packages/TYPO3.Fluid.git/commit/31dd56977c133c045df6ae4b109516c524b5d62a>`_

[BUGFIX] Throw helpful exception if ViewHelper class can't be resolved
-----------------------------------------------------------------------------------------

This adds some case sensitive checks for the resolved ViewHelper
class name in order to prevent misleading fatal errors.

Background:

Previously, if the user mis-spelled a ViewHelper, e.g. by typing
``<f:format.textField>`` instead of ``<f:format.textfield>``, the system
failed with a fatal error of the following form::

	Fatal error: Call to a member function getMethodParameters() on a non-object
	in .../Core/ViewHelper/AbstractViewHelper.php on line 349

The cause of this error is that the reflection service was not properly
injected into the ViewHelper, which happens because the class loader of Flow
loads the non-instrumented class instead of the instrumented one.

This, in turn, happens because ``Data/Temporary/.../AvailableProxyClasses.php``
(which was introduced in Ie09b4e8891b61b33fd9bba3627a8312be02b1486) contains
only correctly-spelled class names; making the classloader believe that it
is not responsible for the ViewHelper.

Fixes: FLOW-152

* Commit: `0f248c1 <https://git.typo3.org/Packages/TYPO3.Fluid.git/commit/0f248c14e407d7bed7b6ad28dbea45062575e668>`_

[BUGFIX] Template cache not flushed for partials and layouts
-----------------------------------------------------------------------------------------

When modifying files in the Partials and Layout folders, the
template cache isn't flushed automatically in development
context like it is when modifying files in the Templates folder.

Fixes: FLOW-70

* Commit: `da579b6 <https://git.typo3.org/Packages/TYPO3.Fluid.git/commit/da579b615ce380d3dd038d934644f13271e455d3>`_

[BUGFIX] Fix documentation (default vs. value) in TranslateViewHelper
-----------------------------------------------------------------------------------------

The documentation in the header of TranslateViewHelper didn't represent
the new naming of attributes. The former "default" is now called
"value".

Resolves: FLOW-77

* Commit: `5fd83ee <https://git.typo3.org/Packages/TYPO3.Fluid.git/commit/5fd83eea3cc93cba42f55d7635d5e9c222fcd33c>`_

[TASK] Improve ViewHelper documentation
-----------------------------------------------------------------------------------------

The documentation of a few ViewHelpers is tweaked so it renders
correctly.

* Commit: `d3ab4c6 <https://git.typo3.org/Packages/TYPO3.Fluid.git/commit/d3ab4c659ccc7fbf7b2be93f7b1ea54ecfaff53a>`_

[BUGFIX] Adjust code migration identifier pattern to contain the full timestamp
-----------------------------------------------------------------------------------------

Previously code migrations are expected to have a class name with the
pattern ``Version<YYYYMMDDhhmm>`` and the unique identifier was
determined extracting the last 12 characters of the class name (which
are expected to be the timestamp).

This change adjusts existing code migrations to use the full timestamp in
order to establish the new guideline (note: those migrations still
return the old identifier so that they won't be applied again with a
new identifier).

Related: FLOW-110

* Commit: `95a51bf <https://git.typo3.org/Packages/TYPO3.Fluid.git/commit/95a51bf248da4848ff349df5c3d16f1cc6035901>`_

[BUGFIX] Make Format.Crop VH multibyte safe
-----------------------------------------------------------------------------------------

This makes use of Flow's unicode utility functions
to allow multibyte-safe operations with the
format.crop ViewHelper.

Fixes: FLOW-48

* Commit: `71ff2eb <https://git.typo3.org/Packages/TYPO3.Fluid.git/commit/71ff2eb1a104d44ad86d43372f4a5c0884d7fb53>`_

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
TYPO3.Kickstart
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

No changes

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
TYPO3.Party
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

No changes

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
TYPO3.Welcome
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

[TASK] Fix links in TYPO3.Welcome template
-----------------------------------------------------------------------------------------

This fixes some links still pointing to forge.type.org.

* Commit: `b7acc77 <https://git.typo3.org/Packages/TYPO3.Welcome.git/commit/b7acc779feb4d2624f0ab0ba9ec27edf304acd41>`_

